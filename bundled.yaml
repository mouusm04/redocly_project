openapi: 3.0.0
info: "site_name: MkLorum\r\n# Chapter 1 Introuction\r\n\r\n## Overview \r\n\r\nOpencontour® is mining-based software that provides cost-benefit mine design options and provides foresight into designs that maximize productivity. It uses CAD functionality for open-pit mine planning.\r\n\r\nThe mine cuts and models are linked to a physical and financial scheduler. Opencontour® is a browser-based application that uses open-source services to deliver rapid results.\r\n\r\n**NOTE: Updates are performed automatically, users do not need to download and install patches.**\r\n\r\n\r\n## Purpose \r\n\r\nThe purpose of this document is to provide an overview of Opencontour mine design software and to explain how to sign up for the software and use it to create projects.\r\n\r\n## Intended Audience\r\n\r\nThis document is intended for use by any individual or organisation interested in utilising the Opencontour software.\r\n"
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: An paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Pet:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: '#/components/schemas/Pet'
